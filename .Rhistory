server <- function(input, output) {
#data preview
selected_file_data <- reactive({
req(input$file)
df <- read.csv(input$file$datapath, stringsAsFactors = FALSE)
})
# Render data preview table
output$contents <- renderTable({
req(selected_file_data())
head(selected_file_data(), 10) # Display first 10 rows
})
#GOAL - make these selections classify the data under the correct test type
#switch(input$radio,
#      "1" = df[, db_ACT, drop = FALSE],      # ACT Data
#     "2" = df[, db_PreACT, drop = FALSE],   # PreACT Data
#    "3" = df[, db_PreACT89, drop = FALSE], # PreACT 8/9 Data
#   "4" = df[, db_PreSAT, drop = FALSE])    # PreSAT Data
#Will upload the data to the server, at some point
{v <- reactiveValues(data = NULL)
observeEvent(input$submit, {
v$data <- submit(100)
})
observeEvent(input$radio, {
if(input$radio ==1 ) {
output$database_column_select_ui <- renderUI({
selectInput("database_column","Select Database Column:", choices = db_ACT)
})}
if(input$radio == 2) {
output$database_column_select_ui <- renderUI({
selectInput("database_column","Select Database Column:", choices = db_PreACT)
})}
if(input$radio == 3 {
# Run the app ----
shinyApp(ui = ui, server = server)
#UI
ui <- fluidPage (
titlePanel("Standardized Testing Data"),
sidebarLayout(
sidebarPanel(
card(
card_header("File input"),
fileInput("file", label = NULL),
#uiOutput("column_select_ui"),
uiOutput("database_column_select_ui"),
actionButton("upload", labal="upload")
),
card(
radioButtons(
"radio",
"Select option",
choices = list("ACT Data" = 1, "PreACT Data" = 2, "PreACT 8/9 Data" = 3, "PreSAT Data" = 4),
selected = 1)
),
),
),
tableOutput(
"contents")
)
#UI
ui <- fluidPage (
titlePanel("Standardized Testing Data"),
sidebarLayout(
sidebarPanel(
card(
card_header("File input"),
fileInput("file", label = NULL),
#uiOutput("column_select_ui"),
uiOutput("database_column_select_ui"),
actionButton("upload", label="upload")
),
card(
radioButtons(
"radio",
"Select option",
choices = list("ACT Data" = 1, "PreACT Data" = 2, "PreACT 8/9 Data" = 3, "PreSAT Data" = 4),
selected = 1)
),
),
),
tableOutput(
"contents")
)
#UI
ui <- fluidPage (
titlePanel("Standardized Testing Data"),
sidebarLayout(
sidebarPanel(
card(
card_header("File input"),
fileInput("file", label = NULL),
#uiOutput("column_select_ui"),
uiOutput("database_column_select_ui"),
actionButton("upload", label="upload")
),
card(
radioButtons(
"radio",
"Select option",
choices = list("ACT Data" = 1, "PreACT Data" = 2, "PreACT 8/9 Data" = 3, "PreSAT Data" = 4),
selected = 1)
),
),
tableOutput(
"contents")
),
)
# Define server logic ----
server <- function(input, output) {
#data preview
selected_file_data <- reactive({
req(input$file)
df <- read.csv(input$file$datapath, stringsAsFactors = FALSE)
})
# Render data preview table
output$contents <- renderTable({
req(selected_file_data())
head(selected_file_data(), 10) # Display first 10 rows
})
#GOAL - make these selections classify the data under the correct test type
#switch(input$radio,
#      "1" = df[, db_ACT, drop = FALSE],      # ACT Data
#     "2" = df[, db_PreACT, drop = FALSE],   # PreACT Data
#    "3" = df[, db_PreACT89, drop = FALSE], # PreACT 8/9 Data
#   "4" = df[, db_PreSAT, drop = FALSE])    # PreSAT Data
#Will upload the data to the server, at some point
{v <- reactiveValues(data = NULL)
observeEvent(input$submit, {
v$data <- submit(100)
})
observeEvent(input$radio, {
if(input$radio ==1 ) {
output$database_column_select_ui <- renderUI({
selectInput("database_column","Select Database Column:", choices = db_ACT)
})}
if(input$radio == 2) {
output$database_column_select_ui <- renderUI({
selectInput("database_column","Select Database Column:", choices = db_PreACT)
})}
if(input$radio == 3 {
req(selected_file_data())
#UI
ui <- fluidPage (
titlePanel("Standardized Testing Data"),
sidebarLayout(
sidebarPanel(
card(
card_header("File input"),
fileInput("file", label = NULL),
#uiOutput("column_select_ui"),
uiOutput("database_column_select_ui"),
actionButton("upload", label="upload")
),
card(
radioButtons(
"radio",
"Select option",
choices = list("ACT Data" = 1, "PreACT Data" = 2, "PreACT 8/9 Data" = 3, "PreSAT Data" = 4),
selected = 1)
),
),
tableOutput(
"contents")
),
)
# Define server logic ----
server <- function(input, output) {
#data preview
selected_file_data <- reactive({
req(input$file)
df <- read.csv(input$file$datapath, stringsAsFactors = FALSE)
})
# Render data preview table
output$contents <- renderTable({
req(selected_file_data())
head(selected_file_data(), 10) # Display first 10 rows
})
#GOAL - make these selections classify the data under the correct test type
#switch(input$radio,
#      "1" = df[, db_ACT, drop = FALSE],      # ACT Data
#     "2" = df[, db_PreACT, drop = FALSE],   # PreACT Data
#    "3" = df[, db_PreACT89, drop = FALSE], # PreACT 8/9 Data
#   "4" = df[, db_PreSAT, drop = FALSE])    # PreSAT Data
#Will upload the data to the server, at some point
{v <- reactiveValues(data = NULL)
observeEvent(input$submit, {
v$data <- submit(100)
})
observeEvent(input$radio, {
if(input$radio ==1 ) {
output$database_column_select_ui <- renderUI({
selectInput("database_column","Select Database Column:", choices = db_ACT)
})}
if(input$radio == 2) {
output$database_column_select_ui <- renderUI({
selectInput("database_column","Select Database Column:", choices = db_PreACT)
})}
if(input$radio == 3) {
output$database_column_select_ui <- renderUI({
selectInput("database_column","Select Database Column:", choices = db_PreACT89)
})})
# Define server logic ----
server <- function(input, output) {
#data preview
selected_file_data <- reactive({
req(input$file)
df <- read.csv(input$file$datapath, stringsAsFactors = FALSE)
})
# Render data preview table
output$contents <- renderTable({
req(selected_file_data())
head(selected_file_data(), 10) # Display first 10 rows
})
#GOAL - make these selections classify the data under the correct test type
#switch(input$radio,
#      "1" = df[, db_ACT, drop = FALSE],      # ACT Data
#     "2" = df[, db_PreACT, drop = FALSE],   # PreACT Data
#    "3" = df[, db_PreACT89, drop = FALSE], # PreACT 8/9 Data
#   "4" = df[, db_PreSAT, drop = FALSE])    # PreSAT Data
#Will upload the data to the server, at some point
{v <- reactiveValues(data = NULL)
observeEvent(input$submit, {
v$data <- submit(100)
})
observeEvent(input$radio, {
if(input$radio ==1 ) {
output$database_column_select_ui <- renderUI({
selectInput("database_column","Select Database Column:", choices = db_ACT)
})}
if(input$radio == 2) {
output$database_column_select_ui <- renderUI({
selectInput("database_column","Select Database Column:", choices = db_PreACT)
})}
if(input$radio == 3) {
output$database_column_select_ui <- renderUI({
selectInput("database_column","Select Database Column:", choices = db_PreACT89)
})}
else{
output$database_column_select_ui <- renderUI({
selectInput("database_column", "Select Database Column:", choices = db_PreSAT)
})}
})
}}
# Run the app ----
shinyApp(ui = ui, server = server)
database_columns <- dbGetQuery(db, "DESCRIBE marian.ACT")
runApp('ErinCodeAttempt.R')
#UI
ui <- fluidPage (
titlePanel("Standardized Testing Data"),
sidebarLayout(
sidebarPanel(
card(
card_header("File input"),
fileInput("file", label = NULL),
#uiOutput("column_select_ui"),
uiOutput("database_column_select_ui"),
actionButton("upload", label="upload")
),
card(
radioButtons(
"radio",
"Select option",
choices = list("ACT Data" = 1, "PreACT Data" = 2, "PreACT 8/9 Data" = 3, "PreSAT Data" = 4),
selected = 1)
),
),
tableOutput(
"contents")
),
)
# Define server logic ----
server <- function(input, output) {
#data preview
selected_file_data <- reactive({
req(input$file)
df <- read.csv(input$file$datapath, stringsAsFactors = FALSE)
})
# Render data preview table
output$contents <- renderTable({
req(selected_file_data())
head(selected_file_data(), 10) # Display first 10 rows
})
#Will upload the data to the server, at some point
{v <- reactiveValues(data = NULL)
observeEvent(input$submit, {
v$data <- submit(100)
})
#CODE FOR THE RADIO BUTTON
observeEvent(input$radio, {
if(input$radio ==1 ) {
output$database_column_select_ui <- renderUI({
selectInput("database_column","Select Database Column:", choices = db_ACT)
})}
if(input$radio == 2) {
output$database_column_select_ui <- renderUI({
selectInput("database_column","Select Database Column:", choices = db_PreACT)
})}
if(input$radio == 3) {
output$database_column_select_ui <- renderUI({
selectInput("database_column","Select Database Column:", choices = db_PreACT89)
})}
else{
output$database_column_select_ui <- renderUI({
selectInput("database_column", "Select Database Column:", choices = db_PreSAT)
})}
})
}
}
# Run the app ----
shinyApp(ui = ui, server = server)
#UI
ui <- fluidPage (
titlePanel("Standardized Testing Data"),
sidebarLayout(
sidebarPanel(
card(
card_header("File input"),
fileInput("file", label = NULL),
uiOutput("column_select_ui"),
uiOutput("database_column_select_ui"),
actionButton("upload", label="upload")
),
card(
radioButtons(
"radio",
"Select option",
choices = list("ACT Data" = 1, "PreACT Data" = 2, "PreACT 8/9 Data" = 3, "PreSAT Data" = 4),
selected = 1)
),
),
tableOutput(
"contents")
),
)
# Define server logic ----
server <- function(input, output) {
#data preview
selected_file_data <- reactive({
req(input$file)
df <- read.csv(input$file$datapath, stringsAsFactors = FALSE)
})
# Render data preview table
output$contents <- renderTable({
req(selected_file_data())
head(selected_file_data(), 10) # Display first 10 rows
})
#Will upload the data to the server, at some point
{v <- reactiveValues(data = NULL)
observeEvent(input$submit, {
v$data <- submit(100)
})
#CODE FOR THE RADIO BUTTON
observeEvent(input$radio, {
if(input$radio ==1 ) {
output$database_column_select_ui <- renderUI({
selectInput("database_column","Select Database Column:", choices = db_ACT)
})}
if(input$radio == 2) {
output$database_column_select_ui <- renderUI({
selectInput("database_column","Select Database Column:", choices = db_PreACT)
})}
if(input$radio == 3) {
output$database_column_select_ui <- renderUI({
selectInput("database_column","Select Database Column:", choices = db_PreACT89)
})}
else{
output$database_column_select_ui <- renderUI({
selectInput("database_column", "Select Database Column:", choices = db_PreSAT)
})}
})
}
}
# Run the app ----
shinyApp(ui = ui, server = server)
#UI
ui <- fluidPage (
titlePanel("Standardized Testing Data"),
sidebarLayout(
sidebarPanel(
card(
card_header("File input"),
fileInput("file", label = NULL),
card(
uiOutput("column_select_ui"),
uiOutput("database_column_select_ui"),
actionButton("upload", label="upload")
),
card(
radioButtons(
"radio",
"Select option",
choices = list("ACT Data" = 1, "PreACT Data" = 2, "PreACT 8/9 Data" = 3, "PreSAT Data" = 4),
selected = 1)
),
),
tableOutput(
"contents")
),
))
# Define server logic ----
server <- function(input, output) {
#data preview
selected_file_data <- reactive({
req(input$file)
df <- read.csv(input$file$datapath, stringsAsFactors = FALSE)
})
# Render data preview table
output$contents <- renderTable({
req(selected_file_data())
head(selected_file_data(), 10) # Display first 10 rows
})
#Will upload the data to the server, at some point
{v <- reactiveValues(data = NULL)
observeEvent(input$submit, {
v$data <- submit(100)
})
#CODE FOR THE RADIO BUTTON
observeEvent(input$radio, {
if(input$radio ==1 ) {
output$database_column_select_ui <- renderUI({
selectInput("database_column","Select Database Column:", choices = db_ACT)
})}
if(input$radio == 2) {
output$database_column_select_ui <- renderUI({
selectInput("database_column","Select Database Column:", choices = db_PreACT)
})}
if(input$radio == 3) {
output$database_column_select_ui <- renderUI({
selectInput("database_column","Select Database Column:", choices = db_PreACT89)
})}
else{
output$database_column_select_ui <- renderUI({
selectInput("database_column", "Select Database Column:", choices = db_PreSAT)
})}
})
}
}
# Run the app ----
shinyApp(ui = ui, server = server)
#UI
ui <- fluidPage (
titlePanel("Standardized Testing Data"),
sidebarLayout(
sidebarPanel(
card(
card_header("File input"),
fileInput("file", label = NULL),
uiOutput("column_select_ui"),
uiOutput("database_column_select_ui"),
actionButton("upload", label="upload")
),
card(
radioButtons(
"radio",
"Select option",
choices = list("ACT Data" = 1, "PreACT Data" = 2, "PreACT 8/9 Data" = 3, "PreSAT Data" = 4),
selected = 1)
),
),
tableOutput(
"contents")
),
)
# Define server logic ----
server <- function(input, output) {
#data preview
selected_file_data <- reactive({
req(input$file)
df <- read.csv(input$file$datapath, stringsAsFactors = FALSE)
})
# Render data preview table
output$contents <- renderTable({
req(selected_file_data())
head(selected_file_data(), 10) # Display first 10 rows
})
#Will upload the data to the server, at some point
{v <- reactiveValues(data = NULL)
observeEvent(input$submit, {
v$data <- submit(100)
})
#CODE FOR THE RADIO BUTTON
observeEvent(input$radio, {
if(input$radio ==1 ) {
output$database_column_select_ui <- renderUI({
selectInput("database_column","Select Database Column:", choices = db_ACT)
})}
if(input$radio == 2) {
output$database_column_select_ui <- renderUI({
selectInput("database_column","Select Database Column:", choices = db_PreACT)
})}
if(input$radio == 3) {
output$database_column_select_ui <- renderUI({
selectInput("database_column","Select Database Column:", choices = db_PreACT89)
})}
else{
output$database_column_select_ui <- renderUI({
selectInput("database_column", "Select Database Column:", choices = db_PreSAT)
})}
})
}
}
# Run the app ----
shinyApp(ui = ui, server = server)
runApp('ErinCodeAttempt.R')
runApp('ErinCodeAttempt.R')
runApp('ErinCodeAttempt.R')
runApp('ErinCodeAttempt.R')
runApp('ErinCodeAttempt.R')
runApp('ErinCodeAttempt.R')
runApp('ErinCodeAttempt.R')
runApp('ErinCodeAttempt.R')
runApp('ErinCodeAttempt.R')
